apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.armandgray.taap"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 28022060 // targetSDK/apkCode(phone: 02)/productVersion
        versionName "2.0.60"
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            project.logger.lifecycle('Apply Android Test Options Here...')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':shared')

    // Support Library
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.wear:wear:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'

    // Updating Picasso Dependency Version
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'

    // Api
    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-scalars:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${OK_HTTP_VERSION}"

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'

    // Dagger
    implementation "com.google.dagger:dagger-android:${DAGGER_VERSION}"
    implementation "com.google.dagger:dagger-android-support:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

    // Jetpack
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'
    implementation 'androidx.paging:paging-runtime:2.0.0'

    // Misc.
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Unit Test
    testImplementation "junit:junit:${JUNIT_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_VERSION}"
    testImplementation "org.robolectric:robolectric:${ROBOLECTRIC_VERSION}"
    testImplementation "org.powermock:powermock-module-junit4:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-module-junit4-rule:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-api-mockito2:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-classloading-xstream:${POWERMOCK_VERSION}"
    testImplementation 'androidx.arch.core:core-testing:2.0.0'

    // Instrumentation Test
    androidTestImplementation 'androidx.test:runner:1.1.0-beta01'
    androidTestImplementation("androidx.test.espresso:espresso-core:3.1.0-beta01", {
        exclude group: "com.android.support", module: "support-annotations"
    })
}
